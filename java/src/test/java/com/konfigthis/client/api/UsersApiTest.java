/*
 * Requests
 * This API manages a simple User database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.UsersCreateRequest;
import com.konfigthis.client.model.UsersCreateResponse;
import com.konfigthis.client.model.UsersDeleteResponse;
import com.konfigthis.client.model.UsersGetResponse;
import com.konfigthis.client.model.UsersListResponseInner;
import com.konfigthis.client.model.UsersUpdateRequest;
import com.konfigthis.client.model.UsersUpdateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private static UsersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UsersApi(apiClient);
    }

    /**
     * Create User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String name = null;
        String email = null;
        String country = null;
        UsersCreateResponse response = api.create()
                .name(name)
                .email(email)
                .country(country)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String userId = null;
        UsersDeleteResponse response = api.delete(userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        String userId = null;
        UsersGetResponse response = api.get(userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        List<UsersListResponseInner> response = api.list()
                .execute();
        // TODO: test validations
    }

    /**
     * Update User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String userId = null;
        String name = null;
        String email = null;
        String country = null;
        UsersUpdateResponse response = api.update(userId)
                .name(name)
                .email(email)
                .country(country)
                .execute();
        // TODO: test validations
    }

}
